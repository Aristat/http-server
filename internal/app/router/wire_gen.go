// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package router

import (
	"github.com/aristat/http-go-kit/internal/app/handlers"
	"github.com/aristat/http-go-kit/internal/app/logger"
	"github.com/aristat/http-go-kit/internal/app/tracer"
	"github.com/go-chi/chi/v5"
)

// Injectors from injector.go:

// Build
func Build() (*chi.Mux, func(), error) {
	logLogger, cleanup, err := logger.Provider()
	if err != nil {
		return nil, nil, err
	}
	opentracingTracer, cleanup2, err := tracer.Provider(logLogger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	serverHandler, cleanup3, err := handlers.Provider(logLogger)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	mux, cleanup4, err := Provider(logLogger, opentracingTracer, serverHandler)
	if err != nil {
		cleanup3()
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return mux, func() {
		cleanup4()
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
